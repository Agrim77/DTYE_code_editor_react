{"ast":null,"code":"import _slicedToArray from\"/Users/agrimsharma/Downloads/DYTE-CODE-EDITOR/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';//i used codemirror library for text editor implementation. Check out https://codemirror.net for more.\nimport'codemirror/lib/codemirror.css';import'codemirror/theme/material.css';//for html\nimport'codemirror/mode/xml/xml';//for javascript\nimport'codemirror/mode/javascript/javascript';//for css\nimport'codemirror/mode/css/css';import{Controlled as ControlledEditor}from'react-codemirror2';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCompressAlt,faExpandAlt}from'@fortawesome/free-solid-svg-icons';//props to get information from editor\nexport default function Editor(props){var language=props.language,displayName=props.displayName,value=props.value,onChange=props.onChange;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];function handleChange(editor,data,value){onChange(value);}return/*#__PURE__*/ (//editor area container and setup\nReact.createElement(\"div\",{className:\"editor-container \".concat(open?'':'collapsed')},/*#__PURE__*/React.createElement(\"div\",{className:\"editor-title\"},displayName,/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"expand-collapse-btn\",onClick:function onClick(){return setOpen(function(prevOpen){return!prevOpen;});}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:open?faCompressAlt:faExpandAlt}))),/*#__PURE__*/React.createElement(ControlledEditor,{onBeforeChange:handleChange,value:value,className:\"code-mirror-wrapper\",options:{lineWrapping:true,lint:true,mode:language,theme:'material',//for dark theme\nlineNumbers:true}})));}","map":{"version":3,"sources":["/Users/agrimsharma/Downloads/DYTE-CODE-EDITOR/src/components/Editor.js"],"names":["React","useState","Controlled","ControlledEditor","FontAwesomeIcon","faCompressAlt","faExpandAlt","Editor","props","language","displayName","value","onChange","open","setOpen","handleChange","editor","data","prevOpen","lineWrapping","lint","mode","theme","lineNumbers"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA;AACA,MAAO,+BAAP,CACA,MAAO,+BAAP,CACA;AACA,MAAO,yBAAP,CACA;AACA,MAAO,uCAAP,CACA;AACA,MAAO,yBAAP,CACA,OAASC,UAAU,GAAIC,CAAAA,gBAAvB,KAA+C,mBAA/C,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,aAAT,CAAwBC,WAAxB,KAA2C,mCAA3C,CAEA;AACA,cAAe,SAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,IAE9BC,CAAAA,QAF8B,CAM9BD,KAN8B,CAE9BC,QAF8B,CAG9BC,WAH8B,CAM9BF,KAN8B,CAG9BE,WAH8B,CAI9BC,KAJ8B,CAM9BH,KAN8B,CAI9BG,KAJ8B,CAK9BC,QAL8B,CAM9BJ,KAN8B,CAK9BI,QAL8B,eAOVX,QAAQ,CAAC,IAAD,CAPE,wCAO3BY,IAP2B,eAOrBC,OAPqB,eASlC,QAASC,CAAAA,YAAT,CAAsBC,MAAtB,CAA8BC,IAA9B,CAAoCN,KAApC,CAA2C,CACvCC,QAAQ,CAACD,KAAD,CAAR,CACH,CAED,oBACI;AACA,2BAAK,SAAS,4BAAsBE,IAAI,CAAG,EAAH,CAAQ,WAAlC,CAAd,eACE,2BAAK,SAAS,CAAC,cAAf,EACGH,WADH,cAEE,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,qBAFZ,CAGE,OAAO,CAAE,yBAAMI,CAAAA,OAAO,CAAC,SAAAI,QAAQ,QAAI,CAACA,QAAL,EAAT,CAAb,EAHX,eAKE,oBAAC,eAAD,EAAiB,IAAI,CAAEL,IAAI,CAAGR,aAAH,CAAmBC,WAA9C,EALF,CAFF,CADF,cAWE,oBAAC,gBAAD,EACE,cAAc,CAAES,YADlB,CAEE,KAAK,CAAEJ,KAFT,CAGE,SAAS,CAAC,qBAHZ,CAIE,OAAO,CAAE,CACPQ,YAAY,CAAE,IADP,CAEPC,IAAI,CAAE,IAFC,CAGPC,IAAI,CAAEZ,QAHC,CAIPa,KAAK,CAAE,UAJA,CAIY;AACnBC,WAAW,CAAE,IALN,CAJX,EAXF,CAFJ,EA2BC","sourcesContent":["import React, { useState } from 'react'\n\n//i used codemirror library for text editor implementation. Check out https://codemirror.net for more.\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\n//for html\nimport 'codemirror/mode/xml/xml'\n//for javascript\nimport 'codemirror/mode/javascript/javascript'\n//for css\nimport 'codemirror/mode/css/css'\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\n\n//props to get information from editor\nexport default function Editor(props) {\n    const {\n        language,\n        displayName,\n        value,\n        onChange\n    } = props\n    const [open, setOpen] = useState(true)\n\n    function handleChange(editor, data, value) {\n        onChange(value)\n    }\n\n    return (\n        //editor area container and setup\n        <div className={`editor-container ${open ? '' : 'collapsed'}`}>\n          <div className=\"editor-title\">\n            {displayName}\n            <button\n              type=\"button\"\n              className=\"expand-collapse-btn\"\n              onClick={() => setOpen(prevOpen => !prevOpen)}\n            >\n              <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\n            </button>\n          </div>\n          <ControlledEditor\n            onBeforeChange={handleChange}\n            value={value}\n            className=\"code-mirror-wrapper\"\n            options={{\n              lineWrapping: true,\n              lint: true,\n              mode: language,\n              theme: 'material', //for dark theme\n              lineNumbers: true\n            }}\n          />\n        </div>\n      )\n    }\n    "]},"metadata":{},"sourceType":"module"}