{"ast":null,"code":"var _jsxFileName = \"/Users/agrimsharma/Downloads/React-CodePen-Clone/src/components/Editor.js\";\nimport React, { useState } from 'react'; //i used codemirror library for text editor implementation. Check out https://codemirror.net for more.\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css'; //for html\n\nimport 'codemirror/mode/xml/xml'; //for javascript\n\nimport 'codemirror/mode/javascript/javascript'; //for css\n\nimport 'codemirror/mode/css/css';\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'; //props to get information from editor\n\nexport default function Editor(props) {\n  const {\n    language,\n    displayName,\n    value,\n    onChange\n  } = props;\n  const [open, setOpen] = useState(true);\n\n  function handleChange(editor, data, value) {\n    onChange(value);\n  }\n\n  return (\n    /*#__PURE__*/\n    //editor area container and setup\n    React.createElement(\"div\", {\n      className: `editor-container ${open ? '' : 'collapsed'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editor-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, displayName, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"expand-collapse-btn\",\n      onClick: () => setOpen(prevOpen => !prevOpen),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: open ? faCompressAlt : faExpandAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(ControlledEditor, {\n      onBeforeChange: handleChange,\n      value: value,\n      className: \"code-mirror-wrapper\",\n      options: {\n        lineWrapping: true,\n        lint: true,\n        mode: language,\n        theme: 'material',\n        //for dark theme\n        lineNumbers: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }))\n  );\n}","map":{"version":3,"sources":["/Users/agrimsharma/Downloads/React-CodePen-Clone/src/components/Editor.js"],"names":["React","useState","Controlled","ControlledEditor","FontAwesomeIcon","faCompressAlt","faExpandAlt","Editor","props","language","displayName","value","onChange","open","setOpen","handleChange","editor","data","prevOpen","lineWrapping","lint","mode","theme","lineNumbers"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,OAAO,+BAAP;AACA,OAAO,+BAAP,C,CACA;;AACA,OAAO,yBAAP,C,CACA;;AACA,OAAO,uCAAP,C,CACA;;AACA,OAAO,yBAAP;AACA,SAASC,UAAU,IAAIC,gBAAvB,QAA+C,mBAA/C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,mCAA3C,C,CAEA;;AACA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAClC,QAAM;AACFC,IAAAA,QADE;AAEFC,IAAAA,WAFE;AAGFC,IAAAA,KAHE;AAIFC,IAAAA;AAJE,MAKFJ,KALJ;AAMA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAD,CAAhC;;AAEA,WAASc,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCN,KAApC,EAA2C;AACvCC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;;AAED;AAAA;AACI;AACA;AAAK,MAAA,SAAS,EAAG,oBAAmBE,IAAI,GAAG,EAAH,GAAQ,WAAY,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,WADH,eAEE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,qBAFZ;AAGE,MAAA,OAAO,EAAE,MAAMI,OAAO,CAACI,QAAQ,IAAI,CAACA,QAAd,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEL,IAAI,GAAGR,aAAH,GAAmBC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAFF,CADF,eAWE,oBAAC,gBAAD;AACE,MAAA,cAAc,EAAES,YADlB;AAEE,MAAA,KAAK,EAAEJ,KAFT;AAGE,MAAA,SAAS,EAAC,qBAHZ;AAIE,MAAA,OAAO,EAAE;AACPQ,QAAAA,YAAY,EAAE,IADP;AAEPC,QAAAA,IAAI,EAAE,IAFC;AAGPC,QAAAA,IAAI,EAAEZ,QAHC;AAIPa,QAAAA,KAAK,EAAE,UAJA;AAIY;AACnBC,QAAAA,WAAW,EAAE;AALN,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF;AAFJ;AA2BC","sourcesContent":["import React, { useState } from 'react'\n\n//i used codemirror library for text editor implementation. Check out https://codemirror.net for more.\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\n//for html\nimport 'codemirror/mode/xml/xml'\n//for javascript\nimport 'codemirror/mode/javascript/javascript'\n//for css\nimport 'codemirror/mode/css/css'\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\n\n//props to get information from editor\nexport default function Editor(props) {\n    const {\n        language,\n        displayName,\n        value,\n        onChange\n    } = props\n    const [open, setOpen] = useState(true)\n\n    function handleChange(editor, data, value) {\n        onChange(value)\n    }\n\n    return (\n        //editor area container and setup\n        <div className={`editor-container ${open ? '' : 'collapsed'}`}>\n          <div className=\"editor-title\">\n            {displayName}\n            <button\n              type=\"button\"\n              className=\"expand-collapse-btn\"\n              onClick={() => setOpen(prevOpen => !prevOpen)}\n            >\n              <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\n            </button>\n          </div>\n          <ControlledEditor\n            onBeforeChange={handleChange}\n            value={value}\n            className=\"code-mirror-wrapper\"\n            options={{\n              lineWrapping: true,\n              lint: true,\n              mode: language,\n              theme: 'material', //for dark theme\n              lineNumbers: true\n            }}\n          />\n        </div>\n      )\n    }\n    "]},"metadata":{},"sourceType":"module"}